name: CI/CD Pipeline
 
on:
  push:
    branches:
      - main
 
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
 
    steps:
 
    
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

 
    - name: Set up Docker Compose
      run: docker-compose -f docker-compose.yml up -d

      
    - name: setting up java maven
      uses: actions/setup-java@v4
      with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

    # - name: Run unit tests
    #   run: mvn test --file ./BackEnd/EMS/pom.xml
      
    - name: Build with Maven
      if: ${{ contains(github.event.commits.*.added, 'BackEnd/EMS') || contains(github.event.commits.*.modified, 'BackEnd/EMS') }}
      run: |
        cd BackEnd/EMS
        mvn --batch-mode --update-snapshots verify

    - name: Create Backend Image
      if: ${{ contains(github.event.commits.*.added, 'BackEnd/EMS') || contains(github.event.commits.*.modified, 'BackEnd/EMS') }}
      run: |
        cd BackEnd/EMS
        docker build -t itsme15/ems-backend:latest .
 
    - name: Push Backend Image to Docker Hub
      if: ${{ contains(github.event.commits.*.added, 'BackEnd/EMS') || contains(github.event.commits.*.modified, 'BackEnd/EMS') }}
      run: |
        docker push itsme15/ems-backend:latest
 
    - name: Show Backend  image
      run: docker images
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'v20.11.0'
 
    - name: Create Frontend Image
      if: ${{ contains(github.event.commits.*.added, 'FrontEnd/web') || contains(github.event.commits.*.modified, 'FrontEnd/web') }}
      run: |
        cd FrontEnd/web
        docker build -t itsme15/ems-frontend:latest .
 
    - name: Push Frontend Image to Docker Hub
      if: ${{ contains(github.event.commits.*.added, 'FrontEnd/web') || contains(github.event.commits.*.modified, 'FrontEnd/web') }}
      run: |
        docker push itsme15/ems-frontend:latest
        
    - name: Debug Commit Details
      run: echo "${{ toJson(github.event.commits) }}"

      
  
 
 
    - name: Show FrontEnd  image
      run: docker images
 
    # - name: elasticsearch image
    #   run: docker pull docker.elastic.co/elasticsearch/elasticsearch:8.8.1
 
    # - name: Show elasticsearch image
    #   run: docker images
 
      
      
    - name: Tear down Docker Compose
      run: docker-compose -f docker-compose.yml down
